// new REQUEST STRUCTURE

var x = {
	[
		{
			objectModel: ...,
			method: ...,
			arguments: ..Method Arguments..,
			response: ..Requested Parameters here..,
			executeIf: ..condition.., //Execute this request only if the condition is true
			setValuesOnExecution: ..This will let us update any value on the resultObj..
			resultObj: // will hold the name of the result object
			afterThis: { //synonyms may be nextRequest etc.
				[
					executeIf: ..some other condition..
					objectModel: ...,
					method: ...,
					arguments: ...., 
					updateVals: ...
					executeIf: ....,
					resultObj: ....
				]
			},
		},
		{ //reusing code here
			reqName: 'SomeRequestThatIsAlreadyDefined'; //inheriting the request
			
			response : .....
			condition : .....
			
		}

	]
}


Use Cases:

var HTMLElement = { //singleFlowRequest
	objectModel: document,
	method: 'getElementById'
}

var getValue = {
	reqName: 'HTMLElement',
	response:'value'
}
var setValue = {
	reqName: 'HTMLElement',

	setValuesOnExecution : {
		value : "defaultValue"
	}

}
var PasswordCheck = [
	{
		reqName:'getValue',
		arguments:'password',
		resultObj: 'globalPass',
		afterThis: {
			executeIf : (globalPass.length > 8),
			reqName:'loginWithAjax' // I am not going to write an Ajax request now
		}
	}
]


		{
			objectModel:document,
			method: getElementById,
			arguments:'password', //There exists some <input id="password" type="password">
			resultObj: 'globalPass',
			response:'value',
			afterThis: {
				executeIf : (globalPass.length > 8),
				reqName:'loginWithAjax' // I am not going to write an Ajax request now
			}
		}


		response = response[req.andThen[0]]

		globalPass = getElementById('password').value



https://github.com/bronzwikgk/everything-Happens-Here-Ver-O.1/blob/fileHandle/function/actionEngineV9_2.js